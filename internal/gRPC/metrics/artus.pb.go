// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: artus.proto

package metrics

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientIp      string                 `protobuf:"bytes,1,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`
	CpuName       string                 `protobuf:"bytes,2,opt,name=cpu_name,json=cpuName,proto3" json:"cpu_name,omitempty"`
	LogicalCore   string                 `protobuf:"bytes,3,opt,name=logical_core,json=logicalCore,proto3" json:"logical_core,omitempty"`
	PhysicalCore  string                 `protobuf:"bytes,4,opt,name=physical_core,json=physicalCore,proto3" json:"physical_core,omitempty"`
	CpuUsage      string                 `protobuf:"bytes,5,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`
	TotalRam      string                 `protobuf:"bytes,6,opt,name=total_ram,json=totalRam,proto3" json:"total_ram,omitempty"`
	UsedRam       string                 `protobuf:"bytes,7,opt,name=used_ram,json=usedRam,proto3" json:"used_ram,omitempty"`
	FreeRam       string                 `protobuf:"bytes,8,opt,name=free_ram,json=freeRam,proto3" json:"free_ram,omitempty"`
	RamUsage      string                 `protobuf:"bytes,9,opt,name=ram_usage,json=ramUsage,proto3" json:"ram_usage,omitempty"`
	DiskTotal     string                 `protobuf:"bytes,10,opt,name=disk_total,json=diskTotal,proto3" json:"disk_total,omitempty"`
	DiskUsed      string                 `protobuf:"bytes,11,opt,name=disk_used,json=diskUsed,proto3" json:"disk_used,omitempty"`
	DiskFree      string                 `protobuf:"bytes,12,opt,name=disk_free,json=diskFree,proto3" json:"disk_free,omitempty"`
	DiskUsage     string                 `protobuf:"bytes,13,opt,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`
	Inbound       string                 `protobuf:"bytes,14,opt,name=inbound,proto3" json:"inbound,omitempty"`
	Outbound      string                 `protobuf:"bytes,15,opt,name=outbound,proto3" json:"outbound,omitempty"`
	PacketsIn     string                 `protobuf:"bytes,16,opt,name=packets_in,json=packetsIn,proto3" json:"packets_in,omitempty"`
	PacketsOut    string                 `protobuf:"bytes,17,opt,name=packets_out,json=packetsOut,proto3" json:"packets_out,omitempty"`
	Hostname      string                 `protobuf:"bytes,18,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Os            string                 `protobuf:"bytes,19,opt,name=os,proto3" json:"os,omitempty"`
	Platform      string                 `protobuf:"bytes,20,opt,name=platform,proto3" json:"platform,omitempty"`
	KernelVersion string                 `protobuf:"bytes,21,opt,name=kernel_version,json=kernelVersion,proto3" json:"kernel_version,omitempty"`
	Uptime        string                 `protobuf:"bytes,22,opt,name=uptime,proto3" json:"uptime,omitempty"`
	BootTime      string                 `protobuf:"bytes,23,opt,name=boot_time,json=bootTime,proto3" json:"boot_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsRequest) Reset() {
	*x = MetricsRequest{}
	mi := &file_artus_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsRequest) ProtoMessage() {}

func (x *MetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_artus_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsRequest.ProtoReflect.Descriptor instead.
func (*MetricsRequest) Descriptor() ([]byte, []int) {
	return file_artus_proto_rawDescGZIP(), []int{0}
}

func (x *MetricsRequest) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *MetricsRequest) GetCpuName() string {
	if x != nil {
		return x.CpuName
	}
	return ""
}

func (x *MetricsRequest) GetLogicalCore() string {
	if x != nil {
		return x.LogicalCore
	}
	return ""
}

func (x *MetricsRequest) GetPhysicalCore() string {
	if x != nil {
		return x.PhysicalCore
	}
	return ""
}

func (x *MetricsRequest) GetCpuUsage() string {
	if x != nil {
		return x.CpuUsage
	}
	return ""
}

func (x *MetricsRequest) GetTotalRam() string {
	if x != nil {
		return x.TotalRam
	}
	return ""
}

func (x *MetricsRequest) GetUsedRam() string {
	if x != nil {
		return x.UsedRam
	}
	return ""
}

func (x *MetricsRequest) GetFreeRam() string {
	if x != nil {
		return x.FreeRam
	}
	return ""
}

func (x *MetricsRequest) GetRamUsage() string {
	if x != nil {
		return x.RamUsage
	}
	return ""
}

func (x *MetricsRequest) GetDiskTotal() string {
	if x != nil {
		return x.DiskTotal
	}
	return ""
}

func (x *MetricsRequest) GetDiskUsed() string {
	if x != nil {
		return x.DiskUsed
	}
	return ""
}

func (x *MetricsRequest) GetDiskFree() string {
	if x != nil {
		return x.DiskFree
	}
	return ""
}

func (x *MetricsRequest) GetDiskUsage() string {
	if x != nil {
		return x.DiskUsage
	}
	return ""
}

func (x *MetricsRequest) GetInbound() string {
	if x != nil {
		return x.Inbound
	}
	return ""
}

func (x *MetricsRequest) GetOutbound() string {
	if x != nil {
		return x.Outbound
	}
	return ""
}

func (x *MetricsRequest) GetPacketsIn() string {
	if x != nil {
		return x.PacketsIn
	}
	return ""
}

func (x *MetricsRequest) GetPacketsOut() string {
	if x != nil {
		return x.PacketsOut
	}
	return ""
}

func (x *MetricsRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *MetricsRequest) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *MetricsRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *MetricsRequest) GetKernelVersion() string {
	if x != nil {
		return x.KernelVersion
	}
	return ""
}

func (x *MetricsRequest) GetUptime() string {
	if x != nil {
		return x.Uptime
	}
	return ""
}

func (x *MetricsRequest) GetBootTime() string {
	if x != nil {
		return x.BootTime
	}
	return ""
}

type MetricsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsResponse) Reset() {
	*x = MetricsResponse{}
	mi := &file_artus_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsResponse) ProtoMessage() {}

func (x *MetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_artus_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsResponse.ProtoReflect.Descriptor instead.
func (*MetricsResponse) Descriptor() ([]byte, []int) {
	return file_artus_proto_rawDescGZIP(), []int{1}
}

func (x *MetricsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MetricsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_artus_proto protoreflect.FileDescriptor

const file_artus_proto_rawDesc = "" +
	"\n" +
	"\vartus.proto\x12\ametrics\"\xaf\x05\n" +
	"\x0eMetricsRequest\x12\x1b\n" +
	"\tclient_ip\x18\x01 \x01(\tR\bclientIp\x12\x19\n" +
	"\bcpu_name\x18\x02 \x01(\tR\acpuName\x12!\n" +
	"\flogical_core\x18\x03 \x01(\tR\vlogicalCore\x12#\n" +
	"\rphysical_core\x18\x04 \x01(\tR\fphysicalCore\x12\x1b\n" +
	"\tcpu_usage\x18\x05 \x01(\tR\bcpuUsage\x12\x1b\n" +
	"\ttotal_ram\x18\x06 \x01(\tR\btotalRam\x12\x19\n" +
	"\bused_ram\x18\a \x01(\tR\ausedRam\x12\x19\n" +
	"\bfree_ram\x18\b \x01(\tR\afreeRam\x12\x1b\n" +
	"\tram_usage\x18\t \x01(\tR\bramUsage\x12\x1d\n" +
	"\n" +
	"disk_total\x18\n" +
	" \x01(\tR\tdiskTotal\x12\x1b\n" +
	"\tdisk_used\x18\v \x01(\tR\bdiskUsed\x12\x1b\n" +
	"\tdisk_free\x18\f \x01(\tR\bdiskFree\x12\x1d\n" +
	"\n" +
	"disk_usage\x18\r \x01(\tR\tdiskUsage\x12\x18\n" +
	"\ainbound\x18\x0e \x01(\tR\ainbound\x12\x1a\n" +
	"\boutbound\x18\x0f \x01(\tR\boutbound\x12\x1d\n" +
	"\n" +
	"packets_in\x18\x10 \x01(\tR\tpacketsIn\x12\x1f\n" +
	"\vpackets_out\x18\x11 \x01(\tR\n" +
	"packetsOut\x12\x1a\n" +
	"\bhostname\x18\x12 \x01(\tR\bhostname\x12\x0e\n" +
	"\x02os\x18\x13 \x01(\tR\x02os\x12\x1a\n" +
	"\bplatform\x18\x14 \x01(\tR\bplatform\x12%\n" +
	"\x0ekernel_version\x18\x15 \x01(\tR\rkernelVersion\x12\x16\n" +
	"\x06uptime\x18\x16 \x01(\tR\x06uptime\x12\x1b\n" +
	"\tboot_time\x18\x17 \x01(\tR\bbootTime\"E\n" +
	"\x0fMetricsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2R\n" +
	"\x0eMetricsService\x12@\n" +
	"\vSendMetrics\x12\x17.metrics.MetricsRequest\x1a\x18.metrics.MetricsResponseB\x17Z\x15internal/gRPC/metricsb\x06proto3"

var (
	file_artus_proto_rawDescOnce sync.Once
	file_artus_proto_rawDescData []byte
)

func file_artus_proto_rawDescGZIP() []byte {
	file_artus_proto_rawDescOnce.Do(func() {
		file_artus_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_artus_proto_rawDesc), len(file_artus_proto_rawDesc)))
	})
	return file_artus_proto_rawDescData
}

var file_artus_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_artus_proto_goTypes = []any{
	(*MetricsRequest)(nil),  // 0: metrics.MetricsRequest
	(*MetricsResponse)(nil), // 1: metrics.MetricsResponse
}
var file_artus_proto_depIdxs = []int32{
	0, // 0: metrics.MetricsService.SendMetrics:input_type -> metrics.MetricsRequest
	1, // 1: metrics.MetricsService.SendMetrics:output_type -> metrics.MetricsResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_artus_proto_init() }
func file_artus_proto_init() {
	if File_artus_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_artus_proto_rawDesc), len(file_artus_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_artus_proto_goTypes,
		DependencyIndexes: file_artus_proto_depIdxs,
		MessageInfos:      file_artus_proto_msgTypes,
	}.Build()
	File_artus_proto = out.File
	file_artus_proto_goTypes = nil
	file_artus_proto_depIdxs = nil
}
